# Production Kubernetes Deployment for Spike Transformer Compiler
apiVersion: v1
kind: Namespace
metadata:
  name: spike-compiler-prod
  labels:
    name: spike-compiler-prod
    environment: production

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spike-compiler-config
  namespace: spike-compiler-prod
data:
  app.yaml: |
    environment: production
    version: "1.0.0"
    logging:
      level: INFO
      format: json
      output: stdout
    metrics:
      enabled: true
      port: 9090
      path: /metrics
    health_checks:
      liveness_probe:
        path: /health
        initial_delay: 30
        period: 10
        timeout: 5
        failure_threshold: 3
      readiness_probe:
        path: /ready
        initial_delay: 5
        period: 5
        timeout: 3
        failure_threshold: 3
    performance:
      max_compilation_time: 30
      max_memory_usage: 2048
      enable_caching: true
    security:
      enable_tls: true
      require_auth: true
      scan_enabled: true

---
apiVersion: v1
kind: Secret
metadata:
  name: spike-compiler-secrets
  namespace: spike-compiler-prod
type: Opaque
data:
  # Base64 encoded secrets (replace with actual values)
  api_key: "your-base64-encoded-api-key"
  database_password: "your-base64-encoded-db-password"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spike-transformer-compiler
  namespace: spike-compiler-prod
  labels:
    app: spike-transformer-compiler
    version: "1.0.0"
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: spike-transformer-compiler
  template:
    metadata:
      labels:
        app: spike-transformer-compiler
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: spike-compiler-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: spike-transformer-compiler
        image: spike-transformer-compiler:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: VERSION
          value: "1.0.0"
        - name: LOG_LEVEL
          value: "INFO"
        - name: METRICS_ENABLED
          value: "true"
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: spike-compiler-secrets
              key: api_key
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
            ephemeral-storage: "2Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
            ephemeral-storage: "5Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: temp-volume
          mountPath: /tmp
        - name: logs-volume
          mountPath: /app/logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config-volume
        configMap:
          name: spike-compiler-config
      - name: temp-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      terminationGracePeriodSeconds: 30
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: spike-transformer-compiler-service
  namespace: spike-compiler-prod
  labels:
    app: spike-transformer-compiler
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: spike-transformer-compiler

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spike-compiler-sa
  namespace: spike-compiler-prod
  labels:
    app: spike-transformer-compiler

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spike-compiler-role
  namespace: spike-compiler-prod
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spike-compiler-rolebinding
  namespace: spike-compiler-prod
subjects:
- kind: ServiceAccount
  name: spike-compiler-sa
  namespace: spike-compiler-prod
roleRef:
  kind: Role
  name: spike-compiler-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: spike-compiler-netpol
  namespace: spike-compiler-prod
spec:
  podSelector:
    matchLabels:
      app: spike-transformer-compiler
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 443

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: spike-compiler-hpa
  namespace: spike-compiler-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: spike-transformer-compiler
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: spike-compiler-pdb
  namespace: spike-compiler-prod
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: spike-transformer-compiler

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spike-compiler-ingress
  namespace: spike-compiler-prod
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - spike-compiler.yourdomain.com
    secretName: spike-compiler-tls
  rules:
  - host: spike-compiler.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: spike-transformer-compiler-service
            port:
              number: 80

---
# ServiceMonitor for Prometheus scraping
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: spike-compiler-metrics
  namespace: spike-compiler-prod
  labels:
    app: spike-transformer-compiler
spec:
  selector:
    matchLabels:
      app: spike-transformer-compiler
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics